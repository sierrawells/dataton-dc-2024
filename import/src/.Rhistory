tablas_juntas_por_anio[[anio]] <- tablas_juntas_anio %>%
mutate(across(everything(), as.character))
}
names(defun2017)
names(parentesco2017)
names(catminde2017)
vars_renombrar_catminde <- read_yaml(rutas$vars_renombrar)[["catminde"]] %>%
unlist()
vars_renombrar_parentesco <- read_yaml(rutas$vars_renombrar)[["parentesco"]] %>%
unlist()
for (anio in names(tablas_por_anio)){
message(paste0("Juntando tablas para ", anio))
tablas_juntas_anio <- tablas_por_anio[[anio]]$defun %>%
clean_names() %>%
rename(any_of(vars_renombrar_defun)) %>%
select(all_of(vars_all),
any_of(vars_any)) %>%
# QUEDAR ÚNICAMENTE HOMICIDIOS !!!
filter(as.numeric(tipo_defun) == 2) %>%
left_join(
tablas_por_anio[[anio]]$catminde %>%
clean_names() %>%
rename(any_of(vars_renombrar_catminde)),
by = c("causa_def" = "cve"))
if (as.numeric(anio) > 2011){
tablas_juntas_anio <- tablas_juntas_anio %>%
left_join(
tablas_por_anio[[anio]]$parentesco %>%
clean_names() %>%
mutate(clave = as.numeric(clave)) %>%
rename(any_of(vars_renombrar_parentesco)),
by = c("par_agre" = "clave"))
}
stopifnot("nombre" %in% names(tablas_juntas_anio) == F)
tablas_juntas_por_anio[[anio]] <- tablas_juntas_anio %>%
mutate(across(everything(), as.character))
}
# Juntar anios ====
homic_anios_juntos <- bind_rows(tablas_juntas_por_anio, .id = "anio_df")
# For each variable in each year, summarize percent of NA
summary <- anios_juntos %>%
group_by(anio) %>%
summarize(across(everything(), ~mean(is.na(.x))))
rm(anios_juntos)
# For each variable in each year, summarize percent of NA
summary <- homic_anios_juntos %>%
group_by(anio) %>%
summarize(across(everything(), ~mean(is.na(.x))))
# For each variable in each year, summarize percent of NA
summary <- homic_anios_juntos %>%
group_by(anio_df) %>%
summarize(across(everything(), ~mean(is.na(.x))))
View(summary)
drive_in
i <- 1
id <- drive_in$id[i]
pacman::p_load(tidyverse, here, yaml, googledrive,
foreign, janitor, sf)
nombre <- drive_in$name[i]
id <- drive_in$id[i]
drive_download(
as_id(id),
paste0(tempdir(), "/", nombre),
overwrite = TRUE)
tempo <- st_read(paste0(tempdir(), "/", nombre),
options = "ENCODING=ISO-8859-1", quiet = TRUE)
tempo
tempo <- read.dbf(paste0(tempdir(), "/", nombre))
tempo
tempo <- read.dbf(paste0(tempdir(), "/", nombre), as.is = T)
Encoding(tempo) <- "UTF-8"
glimpse(tempo)
Encoding(tempo$DESCRIP) <- "UTF-8"
glimpse(tempo)
tempo$DESCRIP
Encoding(tempo$DESCRIP) <- "ISO-8859-1"
tempo$DESCRIP
guess_encoding(paste0(tempdir(), "/", nombre))
??change.encoding
tempo <- data.frame(lapply(tempo, function(x) iconv(x, from = "ISO-8859-1", to = "UTF-8")))
glimpse(tempo)
tempo$DESCRIP
guess_encoding(paste0(tempdir(), "/", nombre))
tempo <- st_read(paste0(tempdir(), "/", nombre))
glimpse(tempo)
tempo$DESCRIP
tempo <- st_read(paste0(tempdir(), "/", nombre,
options = "ENCODING=ISO-8859-1", quiet = TRUE)
tempo <- st_read(paste0(tempdir(), "/", nombre,
options = "ENCODING=ISO-8859-1", quiet = TRUE))
tempo <- st_read(paste0(tempdir(), "/", nombre, quiet = TRUE))
nombre <- drive_in$name[i]
id <- drive_in$id[i]
drive_download(
as_id(id),
paste0(tempdir(), "/", nombre),
overwrite = TRUE)
tempo <- st_read(paste0(tempdir(), "/", nombre, quiet = TRUE))
tempo <- st_read(paste0(tempdir(), "/", nombre), quiet = TRUE)
tempo$DESCRIP
pacman::p_load(tidyverse, here, yaml, googledrive, janitor, sf, digest)
# Escribir hash ====
hash <- digest(homic_anios_juntos, algo = "sha256")
writeLines(hash, paste0(rutas$output, "/importar_variables.txt"))
# Archivos locales
rutas <- list(
vars_importar = here("import/hand/vars_para_importar.yaml"),
vars_renombrar = here("import/hand/vars_renombrar.yaml"),
output = here("import/output"))
# Escribir hash ====
hash <- digest(homic_anios_juntos, algo = "sha256")
writeLines(hash, paste0(rutas$output, "/importar_variables.txt"))
# Archivos locales
rutas <- list(
anios = here("import/hand/anios_para_importar.yaml"),
tablas = here("import/hand/tablas_para_importar.yaml"),
output = here("import/output"))
hash <- digest(objeto_para_hash, algo = "sha256")
# Escribir hash ====
objeto_para_hash <- list(
anios_para_bajar = anios_para_bajar,
tablas_para_bajar = tablas_para_bajar
)
#
# Author: SW
# Maintainer(s): SW, AF, PB, IS
# License:  Data Cívica 2024 ©
# ---------------------------------------------
# TODO
# Paquetería
if(!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, here, yaml, googledrive, digest)
options(timeout = 600)
# Archivos locales
rutas <- list(
anios = here("import/hand/anios_para_importar.yaml"),
tablas = here("import/hand/tablas_para_importar.yaml"),
output = here("import/output"))
# Definir carpetas de Drive
drive_auth(email = "sierra.wells@datacivica.org")
drive_out_id <- as_id("1nfUnukWNpM1Ft0viVhjNxJ5ODfI1JsDd")
drive_out <- drive_ls(drive_out_id)
# Leer lista de anios y tablas para importar
anios_para_bajar <- read_yaml(rutas$anios) %>%
# Convertir a vector de caracteres
map_chr(as.character)
tablas_para_bajar <- read_yaml(rutas$tablas) %>%
map_chr(as.character)
# Escribir hash ====
# Aquí escribimos el hash para dejar registro de si el output de este script cambió
# El output solo debería cambiar si cambiamos los años o tablas que buscamos bajar
objeto_para_hash <- list(
anios_para_bajar = anios_para_bajar,
tablas_para_bajar = tablas_para_bajar)
hash <- digest(objeto_para_hash, algo = "sha256")
writeLines(hash, paste0(rutas$output, "/descargar_bases.txt"))
# Archivos locales
rutas <- list(
vars_importar = here("import/hand/vars_para_importar.yaml"),
vars_renombrar = here("import/hand/vars_renombrar.yaml"),
output = here("import/output/"))
writeLines(hash, paste0(rutas$output, "importar_variables.txt"))
rm(list = ls())
stopifnot(nrow(drive_in) == 1)
# Leer datos de Drive ====
id_para_leer <- drive_in %>%
pull(id)
#
# Author: SW
# Maintainer(s): SW, AF, PB, IS
# License:  Data Cívica 2024 ©
# ---------------------------------------------
# TODO
# Paquetería
if(!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, here, yaml, googledrive, digest)
# Archivos locales
rutas <- list(
output = here("clean/output/"))
# Definir carpetas de Drive
drive_auth(email = "sierra.wells@datacivica.org")
drive_in <- drive_ls(as_id("1VqSBZsIn2g9BJ3iTE2L4g7sMBWK2zjrK"))
drive_out <- as_id("1iUGz7rHB6dfmcHZTvWBUpsyPmtPlxEkU")
stopifnot(nrow(drive_in) == 1)
# Leer datos de Drive ====
id_para_leer <- drive_in %>%
pull(id)
drive_download(
as_id(id_para_leer),
paste0(tempdir(), "/defunciones.csv"),
overwrite = TRUE)
defun_para_limpiar <- fread(paste0(tempdir(), "/defunciones.csv"))
glimpse(defun_para_limpiar)
table(defun_para_limpiar$parentesco_descrip)
file.remove(paste0(tempdir(), "/defunciones.csv"))
# Limpiar datos =====
defun_limpio <- defun_para_limpiar %>%
mutate(
sexo = case_when(
sexo == 1 ~ "Hombre",
sexo == 2 ~ "Mujer",
T ~ NA_character_),
edad = case_when(
as.numeric(edad) < 4000 ~ 0,
as.numeric(edad) %in% 4001:4120 ~ as.numeric(edad) - 4000,
T ~ NA_real_),
dia_ocurr = ifelse(as.numeric(dia_ocurr) == 99, NA, dia_ocurr))
glimpse(defun_limpio)
table(defun_limpio$dia_ocurr, useNA = "always")
glimpse(defun_para_limpiar)
table(defun_para_limpiar$causa_descrip)
glimpse(defun_para_limpiar)
# Limpiar datos =====
defun_limpio <- defun_para_limpiar %>%
mutate(
sexo = case_when(
sexo == 1 ~ "Hombre",
sexo == 2 ~ "Mujer",
T ~ NA_character_),
edad = case_when(
as.numeric(edad) < 4000 ~ 0,
as.numeric(edad) %in% 4001:4120 ~ as.numeric(edad) - 4000,
T ~ NA_real_),
dia_ocurr = ifelse(as.numeric(dia_ocurr) == 99, NA, dia_ocurr),
mes_ocurr = ifelse(as.numeric(mes_ocurr) == 99, NA, mes_ocurr),
anio_ocurr = ifelse(as.numeric(anio_ocurr) == 9999, NA, anio_ocurr),
escolarida = as.integer(escolarida),
escolarida = case_when(anio_df < 2012 & escolarida == 1 ~  "Sin escolaridad",
anio_df < 2012 & escolarida %in% 2:3 ~ "Preescolar",
anio_df < 2012 & escolarida == 4 ~ "Primaria",
anio_df < 2012 & escolarida == 5 ~ "Secundaria",
anio_df < 2012 & escolarida == 6 ~ "Preparatoria",
anio_df < 2012 & escolarida == 7 ~ "Licenciatura o más",
anio_df < 2012 & escolarida %in% c(8,9) ~ NA_character_,
anio_df >= 2012 & escolarida == 1 ~ "Sin escolaridad",
anio_df >= 2012 & escolarida %in% 2:3 ~ "Preescolar",
anio_df >= 2012 & escolarida %in% 4:5 ~ "Primaria",
anio_df >= 2012 & escolarida %in% 6:7 ~ "Secundaria",
anio_df >= 2012 & escolarida == 8 ~ "Preparatoria",
anio_df >= 2012 & escolarida %in% 9:10 ~ "Licenciatura o más",
anio_df >= 2012 & escolarida %in% c(88, 99) ~ NA_character_,
T ~ NA_character_),
escolarida = factor(escolarida, levels = c("No especificado", "Sin escolaridad", "Preescolar",
"Primaria", "Secundaria", "Preparatoria", "Licenciatura o más")),
edo_civil = case_when(anio_df <= 2003 & edo_civil==1 ~ "Soltero",
anio_df <= 2003 & edo_civil==2 ~ "Casado",
anio_df <= 2003 & edo_civil==3 ~ "Unión Libre",
anio_df <= 2003 & edo_civil %in% 4:5 ~ "Separado o Divorciado",
anio_df <= 2003 & edo_civil==6 ~ "Viudo",
anio_df <= 2003 & edo_civil==9 ~ NA_character_,
anio_df %in% 2004:2011 & edo_civil==1 ~ "Soltero",
anio_df %in% 2004:2011 & edo_civil==2 ~ "Viudo",
anio_df %in% 2004:2011 & edo_civil==3 ~ "Separado o Divorciado",
anio_df %in% 2004:2011 & edo_civil==4 ~ "Unión Libre",
anio_df %in% 2004:2011 & edo_civil==5 ~ "Casado",
anio_df %in% 2004:2011 & edo_civil %in% c(8, 9) ~ NA_character_,
anio_df >= 2012 & edo_civil==1 ~ "Soltero",
anio_df >= 2012 & edo_civil %in% c(2,6) ~ "Separado o Divorciado",
anio_df >= 2012 & edo_civil==3 ~ "Viudo",
anio_df >= 2012 & edo_civil==4 ~ "Unión Libre",
anio_df >= 2012 & edo_civil==5 ~ "Casado",
anio_df >= 2012 & edo_civil %in% c(8, 9) ~ NA_character_,
T ~ NA_character_))
glimpse(defun_para_limpiar)
T ~ NA_character_)
glimpse(defun_para_limpiar)
# Limpiar datos =====
defun_limpio <- defun_para_limpiar %>%
mutate(
ent_ocurr = ifelse(as.numeric(ent_ocurr) == 99, NA, ent_ocurr),
mun_ocurr = ifelse(as.numeric(mun_ocurr) == 999, NA, mun_ocurr),
sexo = case_when(
sexo == 1 ~ "Hombre",
sexo == 2 ~ "Mujer",
T ~ NA_character_),
edad = case_when(
as.numeric(edad) < 4000 ~ 0,
as.numeric(edad) %in% 4001:4120 ~ as.numeric(edad) - 4000,
T ~ NA_real_),
dia_ocurr = ifelse(as.numeric(dia_ocurr) == 99, NA, dia_ocurr),
mes_ocurr = ifelse(as.numeric(mes_ocurr) == 99, NA, mes_ocurr),
anio_ocurr = ifelse(as.numeric(anio_ocurr) == 9999, NA, anio_ocurr),
escolarida = as.integer(escolarida),
escolarida = case_when(anio_df < 2012 & escolarida == 1 ~  "Sin escolaridad",
anio_df < 2012 & escolarida %in% 2:3 ~ "Preescolar",
anio_df < 2012 & escolarida == 4 ~ "Primaria",
anio_df < 2012 & escolarida == 5 ~ "Secundaria",
anio_df < 2012 & escolarida == 6 ~ "Preparatoria",
anio_df < 2012 & escolarida == 7 ~ "Licenciatura o más",
anio_df < 2012 & escolarida %in% c(8,9) ~ NA_character_,
anio_df >= 2012 & escolarida == 1 ~ "Sin escolaridad",
anio_df >= 2012 & escolarida %in% 2:3 ~ "Preescolar",
anio_df >= 2012 & escolarida %in% 4:5 ~ "Primaria",
anio_df >= 2012 & escolarida %in% 6:7 ~ "Secundaria",
anio_df >= 2012 & escolarida == 8 ~ "Preparatoria",
anio_df >= 2012 & escolarida %in% 9:10 ~ "Licenciatura o más",
anio_df >= 2012 & escolarida %in% c(88, 99) ~ NA_character_,
T ~ NA_character_),
edo_civil = case_when(anio_df <= 2003 & edo_civil==1 ~ "Soltero",
anio_df <= 2003 & edo_civil==2 ~ "Casado",
anio_df <= 2003 & edo_civil==3 ~ "Unión Libre",
anio_df <= 2003 & edo_civil %in% 4:5 ~ "Separado o Divorciado",
anio_df <= 2003 & edo_civil==6 ~ "Viudo",
anio_df <= 2003 & edo_civil==9 ~ NA_character_,
anio_df %in% 2004:2011 & edo_civil==1 ~ "Soltero",
anio_df %in% 2004:2011 & edo_civil==2 ~ "Viudo",
anio_df %in% 2004:2011 & edo_civil==3 ~ "Separado o Divorciado",
anio_df %in% 2004:2011 & edo_civil==4 ~ "Unión Libre",
anio_df %in% 2004:2011 & edo_civil==5 ~ "Casado",
anio_df %in% 2004:2011 & edo_civil %in% c(8, 9) ~ NA_character_,
anio_df >= 2012 & edo_civil==1 ~ "Soltero",
anio_df >= 2012 & edo_civil %in% c(2,6) ~ "Separado o Divorciado",
anio_df >= 2012 & edo_civil==3 ~ "Viudo",
anio_df >= 2012 & edo_civil==4 ~ "Unión Libre",
anio_df >= 2012 & edo_civil==5 ~ "Casado",
anio_df >= 2012 & edo_civil %in% c(8, 9) ~ NA_character_,
T ~ NA_character_),
rel_emba = case_when(
rel_emba == 1 ~ T,
rel_emba == 2 ~ F,
T ~ NA),
ocurr_trab = case_when(
ocurr_trab == 1 ~ T,
ocurr_trab == 2 ~ F,
T ~ NA),
lengua = case_when(
lengua == 1 ~ T,
lengua == 2 ~ F,
T ~ NA),
afromex = case_when(
afromex == 1 ~ T,
afromex == 2 ~ F,
T ~ NA),
conindig = case_when(
conindig == 1 ~ T,
conindig == 2 ~ F,
T ~ NA),
nacionalidad = case_when(nacionalidad==1 ~ "Mexicana",
nacionalidad==2 ~ "Extranjera",
T ~ NA_character_),
tloc_ocurr = case_when(
as.numeric(tloc_ocurr) <= 7 ~ "Hasta 19,999 habitantes",
as.numeric(tloc_ocurr) %in% 8:12 ~ "De 20,000 a 99,999 habitantes",
as.numeric(tloc_ocurr) %in% 13:17 ~ "Más de 100,000 habitantes",
T ~ NA_character_),
loc_ocurr = ifelse(as.numeric(loc_ocurr) == 99, NA, loc_ocurr))
glimpse(defun_limpio)
# Limpiar datos =====
defun_limpio <- defun_para_limpiar %>%
mutate(
ent_ocurr = ifelse(as.numeric(ent_ocurr) == 99, NA, ent_ocurr),
mun_ocurr = ifelse(as.numeric(mun_ocurr) == 999, NA, mun_ocurr),
sexo = case_when(
sexo == 1 ~ "Hombre",
sexo == 2 ~ "Mujer",
T ~ NA_character_),
edad = case_when(
as.numeric(edad) < 4000 ~ 0,
as.numeric(edad) %in% 4001:4120 ~ as.numeric(edad) - 4000,
T ~ NA_real_),
dia_ocurr = ifelse(as.numeric(dia_ocurr) == 99, NA, dia_ocurr),
mes_ocurr = ifelse(as.numeric(mes_ocurr) == 99, NA, mes_ocurr),
anio_ocurr = ifelse(as.numeric(anio_ocurr) == 9999, NA, anio_ocurr),
escolarida = as.integer(escolarida),
escolarida = case_when(anio_df < 2012 & escolarida == 1 ~  "Sin escolaridad",
anio_df < 2012 & escolarida %in% 2:3 ~ "Preescolar",
anio_df < 2012 & escolarida == 4 ~ "Primaria",
anio_df < 2012 & escolarida == 5 ~ "Secundaria",
anio_df < 2012 & escolarida == 6 ~ "Preparatoria",
anio_df < 2012 & escolarida == 7 ~ "Licenciatura o más",
anio_df < 2012 & escolarida %in% c(8,9) ~ NA_character_,
anio_df >= 2012 & escolarida == 1 ~ "Sin escolaridad",
anio_df >= 2012 & escolarida %in% 2:3 ~ "Preescolar",
anio_df >= 2012 & escolarida %in% 4:5 ~ "Primaria",
anio_df >= 2012 & escolarida %in% 6:7 ~ "Secundaria",
anio_df >= 2012 & escolarida == 8 ~ "Preparatoria",
anio_df >= 2012 & escolarida %in% 9:10 ~ "Licenciatura o más",
anio_df >= 2012 & escolarida %in% c(88, 99) ~ NA_character_,
T ~ NA_character_),
edo_civil = case_when(anio_df <= 2003 & edo_civil==1 ~ "Soltero",
anio_df <= 2003 & edo_civil==2 ~ "Casado",
anio_df <= 2003 & edo_civil==3 ~ "Unión Libre",
anio_df <= 2003 & edo_civil %in% 4:5 ~ "Separado o Divorciado",
anio_df <= 2003 & edo_civil==6 ~ "Viudo",
anio_df <= 2003 & edo_civil==9 ~ NA_character_,
anio_df %in% 2004:2011 & edo_civil==1 ~ "Soltero",
anio_df %in% 2004:2011 & edo_civil==2 ~ "Viudo",
anio_df %in% 2004:2011 & edo_civil==3 ~ "Separado o Divorciado",
anio_df %in% 2004:2011 & edo_civil==4 ~ "Unión Libre",
anio_df %in% 2004:2011 & edo_civil==5 ~ "Casado",
anio_df %in% 2004:2011 & edo_civil %in% c(8, 9) ~ NA_character_,
anio_df >= 2012 & edo_civil==1 ~ "Soltero",
anio_df >= 2012 & edo_civil %in% c(2,6) ~ "Separado o Divorciado",
anio_df >= 2012 & edo_civil==3 ~ "Viudo",
anio_df >= 2012 & edo_civil==4 ~ "Unión Libre",
anio_df >= 2012 & edo_civil==5 ~ "Casado",
anio_df >= 2012 & edo_civil %in% c(8, 9) ~ NA_character_,
T ~ NA_character_),
rel_emba = case_when(
rel_emba == 1 ~ T,
rel_emba == 2 ~ F,
T ~ NA),
ocurr_trab = case_when(
ocurr_trab == 1 ~ T,
ocurr_trab == 2 ~ F,
T ~ NA),
lengua = case_when(
lengua == 1 ~ T,
lengua == 2 ~ F,
T ~ NA),
afromex = case_when(
afromex == 1 ~ T,
afromex == 2 ~ F,
T ~ NA),
conindig = case_when(
conindig == 1 ~ T,
conindig == 2 ~ F,
T ~ NA),
nacionalidad = case_when(nacionalidad==1 ~ "Mexicana",
nacionalidad==2 ~ "Extranjera",
T ~ NA_character_),
tloc_ocurr = case_when(
as.numeric(tloc_ocurr) <= 7 ~ "Hasta 19,999 habitantes",
as.numeric(tloc_ocurr) %in% 8:12 ~ "De 20,000 a 99,999 habitantes",
as.numeric(tloc_ocurr) %in% 13:17 ~ "Más de 100,000 habitantes",
T ~ NA_character_),
loc_ocurr = ifelse(as.numeric(loc_ocurr) == 99, NA, loc_ocurr)) %>%
# Quitar columnas que por el momento no estamos utilizando
select(-c(lugar_ocur, rel_emba, ocuapcion, cond_act, par_agre, cve_lengua, nacesp_cve))
# Limpiar datos =====
defun_limpio <- defun_para_limpiar %>%
mutate(
ent_ocurr = ifelse(as.numeric(ent_ocurr) == 99, NA, ent_ocurr),
mun_ocurr = ifelse(as.numeric(mun_ocurr) == 999, NA, mun_ocurr),
sexo = case_when(
sexo == 1 ~ "Hombre",
sexo == 2 ~ "Mujer",
T ~ NA_character_),
edad = case_when(
as.numeric(edad) < 4000 ~ 0,
as.numeric(edad) %in% 4001:4120 ~ as.numeric(edad) - 4000,
T ~ NA_real_),
dia_ocurr = ifelse(as.numeric(dia_ocurr) == 99, NA, dia_ocurr),
mes_ocurr = ifelse(as.numeric(mes_ocurr) == 99, NA, mes_ocurr),
anio_ocurr = ifelse(as.numeric(anio_ocurr) == 9999, NA, anio_ocurr),
escolarida = as.integer(escolarida),
escolarida = case_when(anio_df < 2012 & escolarida == 1 ~  "Sin escolaridad",
anio_df < 2012 & escolarida %in% 2:3 ~ "Preescolar",
anio_df < 2012 & escolarida == 4 ~ "Primaria",
anio_df < 2012 & escolarida == 5 ~ "Secundaria",
anio_df < 2012 & escolarida == 6 ~ "Preparatoria",
anio_df < 2012 & escolarida == 7 ~ "Licenciatura o más",
anio_df < 2012 & escolarida %in% c(8,9) ~ NA_character_,
anio_df >= 2012 & escolarida == 1 ~ "Sin escolaridad",
anio_df >= 2012 & escolarida %in% 2:3 ~ "Preescolar",
anio_df >= 2012 & escolarida %in% 4:5 ~ "Primaria",
anio_df >= 2012 & escolarida %in% 6:7 ~ "Secundaria",
anio_df >= 2012 & escolarida == 8 ~ "Preparatoria",
anio_df >= 2012 & escolarida %in% 9:10 ~ "Licenciatura o más",
anio_df >= 2012 & escolarida %in% c(88, 99) ~ NA_character_,
T ~ NA_character_),
edo_civil = case_when(anio_df <= 2003 & edo_civil==1 ~ "Soltero",
anio_df <= 2003 & edo_civil==2 ~ "Casado",
anio_df <= 2003 & edo_civil==3 ~ "Unión Libre",
anio_df <= 2003 & edo_civil %in% 4:5 ~ "Separado o Divorciado",
anio_df <= 2003 & edo_civil==6 ~ "Viudo",
anio_df <= 2003 & edo_civil==9 ~ NA_character_,
anio_df %in% 2004:2011 & edo_civil==1 ~ "Soltero",
anio_df %in% 2004:2011 & edo_civil==2 ~ "Viudo",
anio_df %in% 2004:2011 & edo_civil==3 ~ "Separado o Divorciado",
anio_df %in% 2004:2011 & edo_civil==4 ~ "Unión Libre",
anio_df %in% 2004:2011 & edo_civil==5 ~ "Casado",
anio_df %in% 2004:2011 & edo_civil %in% c(8, 9) ~ NA_character_,
anio_df >= 2012 & edo_civil==1 ~ "Soltero",
anio_df >= 2012 & edo_civil %in% c(2,6) ~ "Separado o Divorciado",
anio_df >= 2012 & edo_civil==3 ~ "Viudo",
anio_df >= 2012 & edo_civil==4 ~ "Unión Libre",
anio_df >= 2012 & edo_civil==5 ~ "Casado",
anio_df >= 2012 & edo_civil %in% c(8, 9) ~ NA_character_,
T ~ NA_character_),
rel_emba = case_when(
rel_emba == 1 ~ T,
rel_emba == 2 ~ F,
T ~ NA),
ocurr_trab = case_when(
ocurr_trab == 1 ~ T,
ocurr_trab == 2 ~ F,
T ~ NA),
lengua = case_when(
lengua == 1 ~ T,
lengua == 2 ~ F,
T ~ NA),
afromex = case_when(
afromex == 1 ~ T,
afromex == 2 ~ F,
T ~ NA),
conindig = case_when(
conindig == 1 ~ T,
conindig == 2 ~ F,
T ~ NA),
nacionalidad = case_when(nacionalidad==1 ~ "Mexicana",
nacionalidad==2 ~ "Extranjera",
T ~ NA_character_),
tloc_ocurr = case_when(
as.numeric(tloc_ocurr) <= 7 ~ "Hasta 19,999 habitantes",
as.numeric(tloc_ocurr) %in% 8:12 ~ "De 20,000 a 99,999 habitantes",
as.numeric(tloc_ocurr) %in% 13:17 ~ "Más de 100,000 habitantes",
T ~ NA_character_),
loc_ocurr = ifelse(as.numeric(loc_ocurr) == 99, NA, loc_ocurr)) %>%
# Quitar columnas que por el momento no estamos utilizando
select(-c(lugar_ocur, rel_emba, ocupacion, cond_act, par_agre, cve_lengua, nacesp_cve))
glimpse(defun_limpio)
